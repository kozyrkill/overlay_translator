#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏ overlay –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
"""

import gi
gi.require_version('Gtk', '3.0')
gi.require_version('Gdk', '3.0')
from gi.repository import Gtk, Gdk, GLib
import time
import subprocess

from overlay_manager import OverlayManager

def test_overlay_invisibility():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏ overlay –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"""
    
    print("=== –¢–µ—Å—Ç –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏ overlay –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ ===")
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä overlay
    overlay_manager = OverlayManager()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ overlay
    print("–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ overlay...")
    overlay_manager.show_multiple_overlays([
        {
            'text': '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç 1',
            'translated_text': 'Test text 1',
            'x': 100, 'y': 100, 'width': 150, 'height': 30
        },
        {
            'text': '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç 2', 
            'translated_text': 'Test text 2',
            'x': 100, 'y': 150, 'width': 150, 'height': 30
        }
    ], 0, 0, True)
    
    print("Overlay —Å–æ–∑–¥–∞–Ω—ã –∏ –≤–∏–¥–Ω—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ")
    print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    input()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∂–∏–º –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏
    print("\n–í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤...")
    overlay_manager.set_screenshot_invisible(True)
    
    print("–¢–µ–ø–µ—Ä—å overlay –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ–≤–∏–¥–∏–º—ã –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º –∑–∞—Ö–≤–∞—Ç–∞ —ç–∫—Ä–∞–Ω–∞")
    print("–ù–æ –æ–Ω–∏ –≤—Å–µ –µ—â–µ –≤–∏–¥–Ω—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ!")
    print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç - overlay –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–ø–∞—Å—Ç—å –Ω–∞ –Ω–µ–≥–æ")
    print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    input()
    
    # –í—ã–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏
    print("\n–í—ã–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤...")
    overlay_manager.set_screenshot_invisible(False)
    
    print("–¢–µ–ø–µ—Ä—å overlay —Å–Ω–æ–≤–∞ –≤–∏–¥–Ω—ã –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º –∑–∞—Ö–≤–∞—Ç–∞ —ç–∫—Ä–∞–Ω–∞")
    print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    input()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
    print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞...")
    for i in range(3):
        is_invisible = overlay_manager.toggle_screenshot_invisibility()
        status = "–í–ö–õ" if is_invisible else "–í–´–ö–õ"
        print(f"–ò—Ç–µ—Ä–∞—Ü–∏—è {i+1}: –†–µ–∂–∏–º –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏ {status}")
        time.sleep(1)
    
    # –û—á–∏—â–∞–µ–º
    print("\n–û—á–∏—â–∞–µ–º overlay...")
    overlay_manager.hide_all_overlays()
    
    print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

def test_screenshot_tools():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"""
    
    print("\n=== –¢–µ—Å—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ ===")
    
    tools = [
        ("gnome-screenshot", ["gnome-screenshot", "--version"]),
        ("scrot", ["scrot", "--version"]),
        ("import (ImageMagick)", ["import", "-version"]),
        ("xwd", ["xwd", "-help"])
    ]
    
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤:")
    for tool_name, cmd in tools:
        try:
            result = subprocess.run(cmd, capture_output=True, text=True, timeout=5)
            if result.returncode == 0:
                print(f"‚úÖ {tool_name} - –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print(f"‚ùå {tool_name} - –æ—à–∏–±–∫–∞: {result.stderr}")
        except FileNotFoundError:
            print(f"‚ùå {tool_name} - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except subprocess.TimeoutExpired:
            print(f"‚è∞ {tool_name} - —Ç–∞–π–º–∞—É—Ç")
        except Exception as e:
            print(f"‚ùå {tool_name} - –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏ overlay –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤")
    print("=" * 50)
    
    try:
        test_overlay_invisibility()
        test_screenshot_tools()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python3 main.py")
        print("2. –í–∫–ª—é—á–∏—Ç–µ —Ä–µ–∂–∏–º –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤")
        print("3. –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã - overlay –Ω–µ –±—É–¥—É—Ç –≤–∏–¥–Ω—ã!")
        
    except KeyboardInterrupt:
        print("\n\n–¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
